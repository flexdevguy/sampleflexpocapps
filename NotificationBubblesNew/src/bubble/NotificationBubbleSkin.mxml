<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
        xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5">
    
    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.SkinnableContainer")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            /**
             *  @private
             */
           /* override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                // Push backgroundColor and backgroundAlpha directly.
                // Handle undefined backgroundColor by hiding the background object.
                if (isNaN(getStyle("backgroundColor")))
                {
                    background.visible = false;
                }
                else
                {
                    background.visible = true;
                    bgFill.color = getStyle("backgroundColor");
                    bgFill.alpha = getStyle("backgroundAlpha");
                }
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }*/
        ]]>        
    </fx:Script>
    
    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled"/>
    </s:states>
        
		 <s:Group left="0" top="0" right="0" bottom="0" id="topGroupMask" >
            <s:Ellipse id="topMaskRect" left="0" top="0" right="0" bottom="0">
                <s:fill>
                    <s:SolidColor alpha="0"/>
                </s:fill>
            </s:Ellipse>
        </s:Group>
		
        <!--- Defines the appearance of the SkinnableContainer class's background. -->
        <s:Rect id="background" left="0" right="0" top="0" bottom="0" radiusX="{this.height / 2}" radiusY="{this.height / 2}">
			<s:stroke>
				<s:SolidColorStroke color="0xFFFFFF" weight="2"/>
			</s:stroke>
            <s:fill>
                <!--- @private -->
                <!--<s:SolidColor id="bgFill" color="#FF0000"/>-->
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xFA8989"/>
					<s:GradientEntry color="0xFC1C1C"/>
					<s:GradientEntry color="0xFF0000"/>
				</s:LinearGradient>
            </s:fill>
			<s:filters>
				<s:DropShadowFilter color="0x000000" alpha="0.75" angle="75" distance="3" blurX="2" blurY="2"/>
			</s:filters>
        </s:Rect>
		
		<s:Ellipse left="0" right="0" height="{this.height}" top="{-this.height/2.5}" mask="{topGroupMask}">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xFAFAFA" alpha="0.25"/>
					<s:GradientEntry color="0xFFFFFF" alpha="0.35"/>
				</s:LinearGradient>
			</s:fill>
		</s:Ellipse>
        
        <!--
        Note: Setting the minimum size to 0 here so that changes to the host component's
        size will not be thwarted by this skin part's minimum size.   This is a compromise,
        more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
        -->
        <!--- @copy spark.components.SkinnableContainer#contentGroup -->
        <s:Group id="contentGroup" left="2" right="2" top="1" bottom="1" minWidth="0" minHeight="0">
            <s:layout>
                <s:BasicLayout clipAndEnableScrolling="true"/>
            </s:layout>
        </s:Group>
    
</s:Skin>
